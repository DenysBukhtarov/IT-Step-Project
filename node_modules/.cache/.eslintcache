[{"C:\\Users\\admin\\Documents\\GitHub\\IT-Step-Project\\src\\index.js":"1","C:\\Users\\admin\\Documents\\GitHub\\IT-Step-Project\\src\\App.js":"2","C:\\Users\\admin\\Documents\\GitHub\\IT-Step-Project\\src\\components\\NavBar.js":"3"},{"size":207,"mtime":1686054055110,"results":"4","hashOfConfig":"5"},{"size":222,"mtime":1691423085268,"results":"6","hashOfConfig":"5"},{"size":2432,"mtime":1691141345353,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w8n2vy",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\admin\\Documents\\GitHub\\IT-Step-Project\\src\\index.js",[],[],"C:\\Users\\admin\\Documents\\GitHub\\IT-Step-Project\\src\\App.js",[],[],"C:\\Users\\admin\\Documents\\GitHub\\IT-Step-Project\\src\\components\\NavBar.js",["18","19","20"],[],"import { useState, useEffect } from 'react';\r\nimport { Navbar, Nav, Container} from 'react-bootstrap';\r\nimport logo from '../assets/img/logo.svg';\r\nimport navIcon1 from '../assets/img/nav-icon1.svg'\r\nimport navIcon2 from '../assets/img/nav-icon2.svg'\r\nimport navIcon3 from '../assets/img/nav-icon3.svg'\r\n \r\n\r\nexport const NavBar = () =>  {\r\nconst [activeLink, setActiveLink] = useState('home');\r\nconst [scrolled, setScrolled] = useState(false);\r\n\r\nuseEffect (() => {\r\n    const onScroll = () => {\r\n        if (window.scrollY > 50){\r\n            setScrolled(true);\r\n        } else {\r\n            setScrolled(false);\r\n        }\r\n    }\r\n\r\nwindow.addEventListener(\"scroll\", onScroll);\r\n\r\nreturn () => window.removeEventListener(\"scroll\", onScroll)\r\n\r\n}, [])\r\n\r\nconst onUpdateActiveLink = (value) => {\r\n    setActiveLink(value);\r\n}\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className={scrolled ? \"scrolled\" : \"\"}>\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\">\r\n            <img src={logo} alt=\"Logo\"></img>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\r\n            <span className=\"navbar-toggler-nav\"></span>\r\n        </Navbar.Toggle>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#home\" \r\n            className={activeLink === 'home' ? 'active navbar-link' : 'navbar-link'} \r\n            onClick={() => onUpdateActiveLink('home')}>Home</Nav.Link>\r\n            <Nav.Link href=\"#skills\"  \r\n            className={activeLink === 'skills' ? 'active navbar-link' : 'navbar-link'} \r\n            onClick={() => onUpdateActiveLink('skills')}>Skills</Nav.Link>\r\n            <Nav.Link href=\"#projects\"  \r\n            className={activeLink === 'projects' ? 'active navbar-link' : 'navbar-link'} \r\n            onClick={() => onUpdateActiveLink('projects')}>Projects</Nav.Link>\r\n          </Nav>\r\n          <span className=\"navbar-text\">\r\n            <div className=\"social-icon\">\r\n                <a href=\"#\"><img src={navIcon1} alt=\"\" /></a>\r\n                <a href=\"#\"><img src={navIcon2} alt=\"\" /></a>\r\n                <a href=\"#\"><img src={navIcon3} alt=\"\" /></a>\r\n            </div>\r\n            <button className=\"vvd\" onClick={() => console.log('connect')}>\r\n                <span>Let's Connect</span>\r\n                </button>\r\n          </span>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\n",{"ruleId":"21","severity":1,"message":"22","line":56,"column":17,"nodeType":"23","endLine":56,"endColumn":29},{"ruleId":"21","severity":1,"message":"22","line":57,"column":17,"nodeType":"23","endLine":57,"endColumn":29},{"ruleId":"21","severity":1,"message":"22","line":58,"column":17,"nodeType":"23","endLine":58,"endColumn":29},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]